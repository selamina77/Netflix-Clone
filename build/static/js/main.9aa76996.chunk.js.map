{"version":3,"sources":["requests.js","axios.js","Row.js","Banner.js","Nav.js","App.js","reportWebVitals.js","index.js"],"names":["API_KEY","requests","fetchNetflixOriginals","fetchTrending","fetchTopRatedMovies","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","fetchMystery","fetchSciFi","fetchWestern","fetchAnimation","fetchTV","instance","axios","create","baseURL","Row","title","fetchUrl","isLargeRow","useState","movies","setMovies","trailerUrl","setTrailerUrl","useEffect","a","get","request","data","results","fetchData","className","map","movie","onClick","movieTrailer","then","url","urlParams","URLSearchParams","URL","search","catch","error","console","log","handleClick","src","poster_path","backdrop_path","alt","name","id","style","padding","videoId","opts","heighr","width","playerVars","autoplay","Banner","str","n","setMovie","Math","floor","random","length","backgroundSize","backgroundImage","backgroundPosition","original_name","overview","substr","Nav","show","handleShow","window","addEventListener","scrollY","removeEventListener","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wPAAMA,G,YAAU,oCAmBCC,EAfA,CAChBC,sBAAsB,wBAAD,OAA0BF,EAA1B,sBACrBG,cAAc,8BAAD,OAAgCH,EAAhC,mBACbI,oBAAoB,4BAAD,OAA8BJ,EAA9B,mBACnBK,kBAAkB,2BAAD,OAA6BL,EAA7B,mBACjBM,kBAAkB,2BAAD,OAA6BN,EAA7B,mBACjBO,kBAAkB,2BAAD,OAA6BP,EAA7B,mBACjBQ,mBAAmB,2BAAD,OAA6BR,EAA7B,sBAClBS,mBAAmB,2BAAD,OAA6BT,EAA7B,mBAClBU,aAAa,2BAAD,OAA6BV,EAA7B,qBACTW,WAAW,2BAAD,OAA6BX,EAA7B,oBACVY,aAAa,2BAAD,OAA6BZ,EAA7B,mBACZa,eAAe,2BAAD,OAA6Bb,EAA7B,mBACdc,QAAQ,2BAAD,OAA6Bd,EAA7B,uB,sCCVIe,E,OALEC,EAAMC,OAAO,CAC5BC,QAAS,iC,wCC2DIC,MAtDf,YAA+C,IAAhCC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,WAAc,EAChBC,mBAAS,IADO,mBACrCC,EADqC,KAC7BC,EAD6B,OAERF,mBAAS,IAFD,mBAErCG,EAFqC,KAEzBC,EAFyB,KA+B5C,OA5BAC,qBAAU,WAAM,4CACd,4BAAAC,EAAA,sEACwBb,EAAMc,IAAIT,GADlC,cACQU,EADR,OAEEN,EAAUM,EAAQC,KAAKC,SAFzB,kBAGSF,GAHT,4CADc,uBAAC,WAAD,wBAMdG,KACC,CAACb,IAsBF,sBAAKc,UAAU,MAAf,UACE,6BAAKf,IACL,qBAAKe,UAAU,cAAf,SACGX,EAAOY,KAAI,SAACC,GAAD,OACV,qBAEEC,QAAS,kBApBC,SAACD,GAChBX,EACDC,EAAc,IAEdY,KAAkB,OAALF,QAAK,IAALA,OAAA,EAAAA,EAAOjB,QAAS,IAC5BoB,MAAK,SAACC,GACL,IAAMC,EAAY,IAAIC,gBAAgB,IAAIC,IAAIH,GAAKI,QACnDlB,EAAce,EAAUZ,IAAI,SAE7BgB,OAAM,SAACC,GAAD,OAAWC,QAAQC,IAAIF,MAWTG,CAAYb,IAC3BF,UAAS,qBAAgBb,GAAc,mBACvC6B,IAAG,UA1CE,wCA0CF,OACD7B,EAAae,EAAMe,YAAcf,EAAMgB,eAEzCC,IAAKjB,EAAMkB,MANNlB,EAAMmB,SAUjB,qBAAKC,MAAO,CAAEC,QAAS,QAAvB,SACEhC,GAAc,cAAC,IAAD,CAASiC,QAASjC,EAAYkC,KArCrC,CACXC,OAAQ,MACRC,MAAO,OACPC,WAAY,CACVC,SAAU,Y,MCyBDC,MA5Cf,WAAmB,IAeCC,EAAKC,EAfP,EACU5C,mBAAS,IADnB,mBACTc,EADS,KACF+B,EADE,KAkBhB,OAhBAxC,qBAAU,WAAM,4CACd,4BAAAC,EAAA,sEACwBb,EAAMc,IAAI7B,EAASC,uBAD3C,cACQ6B,EADR,OAEEqC,EACErC,EAAQC,KAAKC,QACXoC,KAAKC,MAAMD,KAAKE,SAAWxC,EAAQC,KAAKC,QAAQuC,UAJtD,kBAOSzC,GAPT,4CADc,uBAAC,WAAD,wBAUdG,KACC,IAMD,yBACEC,UAAU,SACVsB,MAAO,CACLgB,eAAgB,QAChBC,gBAAgB,4CAAD,cAA8CrC,QAA9C,IAA8CA,OAA9C,EAA8CA,EAAOgB,cAArD,MACfsB,mBAAoB,iBALxB,UAQE,sBAAKxC,UAAU,kBAAf,UACE,oBAAIA,UAAU,eAAd,UACQ,OAALE,QAAK,IAALA,OAAA,EAAAA,EAAOjB,SAAP,OAAgBiB,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAOkB,OAAQlB,EAAMuC,gBAExC,sBAAKzC,UAAU,iBAAf,UACE,wBAAQA,UAAU,gBAAlB,kBACA,wBAAQA,UAAU,gBAAlB,wBAEF,oBAAIA,UAAU,qBAAd,UApBY+B,EAqBD,OAAC7B,QAAD,IAACA,OAAD,EAACA,EAAOwC,SArBFV,EAqBY,KApBvB,OAAHD,QAAG,IAAHA,OAAA,EAAAA,EAAKM,QAASL,EAAID,EAAIY,OAAO,EAAGX,EAAI,GAAK,MAAQD,QAuBtD,qBAAK/B,UAAU,0B,MCXN4C,MA7Bf,WAAgB,IAAD,EACcxD,oBAAS,GADvB,mBACNyD,EADM,KACAC,EADA,KAab,OAXArD,qBAAU,WAMR,OALAsD,OAAOC,iBAAiB,UAAU,WAC5BD,OAAOE,QAAU,IACnBH,GAAW,GACNA,GAAW,MAEb,WACLC,OAAOG,oBAAoB,aAE5B,IAGD,sBAAKlD,UAAS,cAAS6C,GAAQ,aAA/B,UACE,qBACE7C,UAAU,WACVgB,IAAI,4mBACJG,IAAI,iBAEN,qBACEnB,UAAU,aACVgB,IAAI,+EACJG,IAAI,oBCKGgC,MAxBf,WACE,OACE,sBAAKnD,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,CAAKf,MAAM,mBAAkBC,SAAUU,EAAQ7B,sBAAuBoB,YAAU,IAChF,cAAC,EAAD,CAAKF,MAAM,eAAcC,SAAUU,EAAQ5B,gBAC3C,cAAC,EAAD,CAAKiB,MAAM,mBAAkBC,SAAUU,EAAQ3B,sBAC/C,cAAC,EAAD,CAAKgB,MAAM,gBAAeC,SAAUU,EAAQ1B,oBAC5C,cAAC,EAAD,CAAKe,MAAM,gBAAeC,SAAUU,EAAQzB,oBAC5C,cAAC,EAAD,CAAKc,MAAM,gBAAeC,SAAUU,EAAQxB,oBAC5C,cAAC,EAAD,CAAKa,MAAM,iBAAgBC,SAAUU,EAAQvB,qBAC7C,cAAC,EAAD,CAAKY,MAAM,gBAAeC,SAAUU,EAAQtB,qBAC5C,cAAC,EAAD,CAAKW,MAAM,UAASC,SAAUU,EAAQrB,eACtC,cAAC,EAAD,CAAKU,MAAM,QAAOC,SAAUU,EAAQpB,aACpC,cAAC,EAAD,CAAKS,MAAM,UAASC,SAAUU,EAAQnB,eACtC,cAAC,EAAD,CAAKQ,MAAM,YAAWC,SAAUU,EAAQlB,iBACxC,cAAC,EAAD,CAAKO,MAAM,aAAYC,SAAUU,EAAQjB,cCZhCyE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjD,MAAK,YAAkD,IAA/CkD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.9aa76996.chunk.js","sourcesContent":["const API_KEY = \"53a7ce0dd7fb8c98ec042b2bf2993177\";\r\n// request way = \"https://api.themoviedb.org/3/movie/550?api_key=53a7ce0dd7fb8c98ec042b2bf2993177\"\r\n\r\n\r\nconst requests = {\r\n\tfetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\r\n\tfetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n\tfetchTopRatedMovies: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n\tfetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n\tfetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n\tfetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n\tfetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n\tfetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n\tfetchMystery: `/discover/movie?api_key=${API_KEY}&with_genres=9648`,\r\n    fetchSciFi: `/discover/movie?api_key=${API_KEY}&with_genres=878`,\r\n    fetchWestern: `/discover/movie?api_key=${API_KEY}&with_genres=37`,\r\n    fetchAnimation: `/discover/movie?api_key=${API_KEY}&with_genres=16`,\r\n    fetchTV: `/discover/movie?api_key=${API_KEY}&with_genres=10770`,\r\n  };\r\n  export default requests;\r\n\r\n\r\n// const requests = {\r\n//     fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\r\n// \tfetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n\t\r\n// \tfetchTopRatedMovies: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n// \tfetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n// \tfetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n// \tfetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n// \tfetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n// \tfetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n// };\r\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"https://api.themoviedb.org/3\",\r\n});\r\n// instance.get(\"/foo-bar\");\r\n\r\nexport default instance;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"./axios\";\r\nimport \"./Row.css\";\r\nimport YouTube from \"react-youtube\"\r\nimport movieTrailer from \"movie-trailer\"\r\n\r\nconst base_url = \"https://image.tmdb.org/t/p/original/\"\r\n\r\nfunction Row({ title, fetchUrl, isLargeRow }) {\r\n  const [movies, setMovies] = useState([]);\r\n  const [trailerUrl, setTrailerUrl] = useState(\"\")\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const request = await axios.get(fetchUrl)\r\n      setMovies(request.data.results)\r\n      return request;\r\n    }\r\n    fetchData();\r\n  }, [fetchUrl]);\r\n  const opts = {\r\n    heighr: \"390\",\r\n    width: \"100%\",\r\n    playerVars: {\r\n      autoplay: 1\r\n    }\r\n  }\r\n  const handleClick = (movie) => {\r\n    if(trailerUrl){\r\n      setTrailerUrl('')\r\n    }else {\r\n      movieTrailer(movie?.title || \"\")\r\n      .then((url) => {\r\n        const urlParams = new URLSearchParams(new URL(url).search)\r\n        setTrailerUrl(urlParams.get('v'))\r\n      })\r\n      .catch((error) => console.log(error))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <h2>{title}</h2>\r\n      <div className=\"row_posters\">\r\n        {movies.map((movie) => (\r\n          <img\r\n            key={movie.id}\r\n            onClick={() => handleClick(movie)}\r\n            className={`row_poster ${isLargeRow && \"row_posterLarge\"}`}\r\n            src={`${base_url}${\r\n              isLargeRow ? movie.poster_path : movie.backdrop_path\r\n            }`}\r\n            alt={movie.name}\r\n          />\r\n        ))}\r\n      </div>\r\n      <div style={{ padding: \"40px\"}}>\r\n       {trailerUrl && <YouTube videoId={trailerUrl} opts={opts} />}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Row;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"./axios\";\r\nimport requests from \"./requests\";\r\nimport \"./Banner.css\";\r\nfunction Banner() {\r\n  const [movie, setMovie] = useState([]);\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const request = await axios.get(requests.fetchNetflixOriginals);\r\n      setMovie(\r\n        request.data.results[\r\n          Math.floor(Math.random() * request.data.results.length)\r\n        ]\r\n      );\r\n      return request;\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  function truncate(str, n) {\r\n    return str?.length > n ? str.substr(0, n - 1) + \"...\" : str;\r\n  }\r\n  return (\r\n    <header\r\n      className=\"banner\"\r\n      style={{\r\n        backgroundSize: \"cover\",\r\n        backgroundImage: `url(\"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\")`,\r\n        backgroundPosition: \"center center\",\r\n      }}\r\n    >\r\n      <div className=\"banner_contents\">\r\n        <h1 className=\"banner_title\">\r\n          {movie?.title || movie?.name || movie.original_name}\r\n        </h1>\r\n        <div className=\"banner_buttons\">\r\n          <button className=\"banner_button\">Play</button>\r\n          <button className=\"banner_button\">My List</button>\r\n        </div>\r\n        <h1 className=\"banner_description\">\r\n          {truncate(movie?.overview, 150)}\r\n        </h1>\r\n      </div>\r\n      <div className=\"banner_fadeBottom\" />\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Banner;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./Nav.css\";\r\n\r\nfunction Nav() {\r\n  const [show, handleShow] = useState(false);\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", () => {\r\n      if (window.scrollY > 100) {\r\n        handleShow(true);\r\n      } else handleShow(false);\r\n    });\r\n    return () => {\r\n      window.removeEventListener(\"scroll\");\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className={`nav ${show && \"nav_black\"}`}>\r\n      <img\r\n        className=\"nav_logo\"\r\n        src=\"https://images-wixmp-ed30a86b8c4ca887773594c2.wixmp.com/f/12c6f684-d447-4457-84fa-12033cfd581e/d9z3o32-2c299a83-49a9-44c2-bc23-b0b5070a546b.png/v1/fill/w_1024,h_512,strp/netflix_logo_background__2_by_sixmonthslate_d9z3o32-fullview.png?token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ1cm46YXBwOiIsImlzcyI6InVybjphcHA6Iiwib2JqIjpbW3siaGVpZ2h0IjoiPD01MTIiLCJwYXRoIjoiXC9mXC8xMmM2ZjY4NC1kNDQ3LTQ0NTctODRmYS0xMjAzM2NmZDU4MWVcL2Q5ejNvMzItMmMyOTlhODMtNDlhOS00NGMyLWJjMjMtYjBiNTA3MGE1NDZiLnBuZyIsIndpZHRoIjoiPD0xMDI0In1dXSwiYXVkIjpbInVybjpzZXJ2aWNlOmltYWdlLm9wZXJhdGlvbnMiXX0.WKy-rj_8y7ziLuhhtAES7jddy-eUpz6PQQ331bp7rRI\"\r\n        alt=\"Netflix Logo\"\r\n      />\r\n      <img\r\n        className=\"nav_avatar\"\r\n        src=\"https://i.pinimg.com/originals/0d/dc/ca/0ddccae723d85a703b798a5e682c23c1.png\"\r\n        alt=\"Avatar logo\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import './App.css';\nimport request from './requests';\nimport Row from \"./Row\";\nimport Banner from './Banner';\nimport Nav from './Nav';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Nav />\n      <Banner />\n      <Row title=\"Netflix Original\"fetchUrl={request.fetchNetflixOriginals} isLargeRow />\n      <Row title=\"Trending Now\"fetchUrl={request.fetchTrending} />\n      <Row title=\"Top Rated Movies\"fetchUrl={request.fetchTopRatedMovies} />\n      <Row title=\"Action Movies\"fetchUrl={request.fetchActionMovies} />\n      <Row title=\"Comedy Movies\"fetchUrl={request.fetchComedyMovies} />\n      <Row title=\"Horror Movies\"fetchUrl={request.fetchHorrorMovies} />\n      <Row title=\"Romance Movies\"fetchUrl={request.fetchRomanceMovies} />\n      <Row title=\"Documentaries\"fetchUrl={request.fetchDocumentaries} />\n      <Row title=\"Mystery\"fetchUrl={request.fetchMystery} />\n      <Row title=\"SciFi\"fetchUrl={request.fetchSciFi} />\n      <Row title=\"Western\"fetchUrl={request.fetchWestern} />\n      <Row title=\"Animation\"fetchUrl={request.fetchAnimation} />\n      <Row title=\"Netflix TV\"fetchUrl={request.fetchTV} />\n     \n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}